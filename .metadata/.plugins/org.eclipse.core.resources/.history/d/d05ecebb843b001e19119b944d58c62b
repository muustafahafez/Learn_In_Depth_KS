/*
 * main.c
 *
 *  Created on: Aug 15, 2023
 *      Author: Mustafa Hafez
 */

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>

#define DPRINT(...)			{fflush(stdout);\
							 fflush(stdin)\
							printf(__VA_ARGS__) \
							fflush(stdin);\
							fflush(stdout);}

struct SData {

	uint8_t Name[40];
	uint32_t ID;
	float Height;

};

struct SStudent_t  {

	struct SData student;
	struct SStudent_t * PNextStudent;

};

struct SStudent_t * Head = NULL;



void  AddStudent();


void main(void)
{


	uint8_t choice;
	printf("================Enter Your Choice===============\n\n");
	printf("\t\t1-Add New Student\n");
	printf("\t\t2-Delete Student\n");
	printf("\t\t2-Print All Student\n");
	printf("===============================================\n\n");
	scanf("%d",&choice);
	switch(choice){

	case (1) : AddStudent();  break;
	case 2 :		break;
	case 3 :		break;
	default: printf("Wrong Choice\n");	break;

	}



}


void  AddStudent()
{
	uint8_t temp[40];
	struct SStudent_t * PLaststudent = Head;
	struct SStudent_t * PNewStudent;

	//check if the Head is Null, then you are the first student
	if (Head == NULL)
	{
		//create new student

		PNewStudent = (struct SStudent_t *) malloc(sizeof(struct SStudent_t *));
		//Assign Head to the new student
		Head =PNewStudent;

	}
	else{ //list not empty, so you need to reach the final node , assign its pointer to your new node , assign your new ponter node to null


		//Loop till final node
		while(PLaststudent->PNextStudent)
		{
			PLaststudent=PLaststudent->PNextStudent;
		}
		PNewStudent = (struct SStudent_t *) malloc(sizeof(struct SStudent_t *));
		PNewStudent->PNextStudent=NULL;
		PLaststudent->PNextStudent = PNewStudent;

	}

	//Record Data
	printf("Enter student name\n");
	gets(PNewStudent->student.Name);

	printf("Enter student ID\n");
	gets(temp);
	PNewStudent->student.ID = atoi(temp);

	printf("Enter student Height\n");
	gets(temp);
	PNewStudent->student.Height = atof(temp);

}

