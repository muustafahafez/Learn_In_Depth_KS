/*
 * Schedular.h
 *
 *  Created on: Dec 4, 2023
 *      Author: Mustafa Hafez
 */

#ifndef INC_SCHEDULAR_H_
#define INC_SCHEDULAR_H_
#include "stdint.h"
#include "CortexMX_OS_Porting.h"


//Error States
typedef enum{
	RTOS_NoError
}RTOS_ErrorState_t;


//Task structure
typedef struct {

	uint32_t stack_size;
	uint8_t priority;
	void (*P_Task)(void);
	uint8_t Autostart;
	uint32_t _S_PSP_Task; //Not set by user
	uint32_t _E_PSP_Task;//Not set by user
	uint32_t* Current_Task_PSP;//Not set by user
	char Task_Name[30];
	enum{
		Task_Suspend,
		Task_Running,
		Task_Waiting,
		Task_Ready
	}Task_state; //Not set by user

	struct{
		unit32_t Ticks;
		enum{
			Enable,
			Disable
		}Blocking_e;

	}Waiting_Time;

}Task_ref_t;


//Eldeep OS APIs
RTOS_ErrorState_t Eldeep_OSInit();

#endif /* INC_SCHEDULAR_H_ */
