/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 */

#include "stdio.h"
#include "stdint.h"


#define RCC_Base		 0x40021000
#define RCC_APB2ENR		 *(volatile uint32_t *) (RCC_Base + 0x18)

#define IOPAEN		     2  /*Make 1 to enable clock*/


#define GPIOA_Base		 0x40010800
#define GPIOA_CRH		 *(volatile uint32_t*) (GPIOA_Base + 0x04)
#define GPIOA_ODR		 *(volatile uint32_t*) (GPIOA_Base + 0x0c)




typedef union{
	 volatile uint32_t All_Reg;
	struct {
		 volatile	uint32_t PA:8;
		 volatile   uint32_t PB:8;
		 volatile   uint32_t PC:8;
		 volatile   uint32_t PD:8;

	}Port;


}Reg_t;

Reg_t* registerr;

int main(void)
{

RCC_APB2ENR |= (1<<IOPAEN);
GPIOA_CRH &= 0xff0fffff;
GPIOA_CRH |= 0x00200000;

	while(1){
		GPIOA_ODR |=(1<<13);
		for(int i =0; i<5000; i++);
		GPIOA_ODR &= ~(1<<13);
		for(int i =0; i<5000; i++);

	}
}
