
Lab2_Unit6_Lesson3_Config_Sys_Clocks.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000019c  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002cc  080002d4  000102d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002cc  080002cc  000102d4  2**0
                  CONTENTS
  4 .ARM          00000000  080002cc  080002cc  000102d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002cc  080002d4  000102d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002cc  080002cc  000102cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002d0  080002d0  000102d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002d4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002d4  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000102d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000090c  00000000  00000000  000102fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001b2  00000000  00000000  00010c09  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000048  00000000  00000000  00010dc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000030  00000000  00000000  00010e08  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001d01  00000000  00000000  00010e38  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000629  00000000  00000000  00012b39  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00007fee  00000000  00000000  00013162  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001b150  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  0001b1cc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080002b4 	.word	0x080002b4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080002b4 	.word	0x080002b4

08000170 <main>:
#define RCC_APB2ENR			*(volatile vuint32_t*)(RCC_BASE+ 0x18)
#define RCC_CFGR			*(volatile vuint32_t*)(RCC_BASE+ 0x04)


int main(void)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
		/*Initialization*/

	/*Make SW -> 00 in RCC_CFGR to select HIS as clock source which make SysClk = 8 MHZ  bit 0:1*/
	RCC_CFGR|= 0b00<<0;
 8000176:	4b24      	ldr	r3, [pc, #144]	; (8000208 <main+0x98>)
 8000178:	4a23      	ldr	r2, [pc, #140]	; (8000208 <main+0x98>)
 800017a:	681b      	ldr	r3, [r3, #0]
 800017c:	6013      	str	r3, [r2, #0]
	/*Select prescaler not divided to make AHB bus 8MHZ. bit 4:7*/
	RCC_CFGR|= 0b0000<<4;
 800017e:	4b22      	ldr	r3, [pc, #136]	; (8000208 <main+0x98>)
 8000180:	4a21      	ldr	r2, [pc, #132]	; (8000208 <main+0x98>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	6013      	str	r3, [r2, #0]
	/*Select prescaler divided by 2 to make APB1 bus 4MHZ. bit 8:10*/
	RCC_CFGR|=0b100<<8;
 8000186:	4b20      	ldr	r3, [pc, #128]	; (8000208 <main+0x98>)
 8000188:	681b      	ldr	r3, [r3, #0]
 800018a:	4a1f      	ldr	r2, [pc, #124]	; (8000208 <main+0x98>)
 800018c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000190:	6013      	str	r3, [r2, #0]
	/*Select prescaler divided by 4 to make APB2 bus 2MHZ. bit 11:13*/
	RCC_CFGR|=0b101<<11;
 8000192:	4b1d      	ldr	r3, [pc, #116]	; (8000208 <main+0x98>)
 8000194:	681b      	ldr	r3, [r3, #0]
 8000196:	4a1c      	ldr	r2, [pc, #112]	; (8000208 <main+0x98>)
 8000198:	f443 5320 	orr.w	r3, r3, #10240	; 0x2800
 800019c:	6013      	str	r3, [r2, #0]


		RCC_APB2ENR|=(1<<2);
 800019e:	4b1b      	ldr	r3, [pc, #108]	; (800020c <main+0x9c>)
 80001a0:	681b      	ldr	r3, [r3, #0]
 80001a2:	4a1a      	ldr	r2, [pc, #104]	; (800020c <main+0x9c>)
 80001a4:	f043 0304 	orr.w	r3, r3, #4
 80001a8:	6013      	str	r3, [r2, #0]
		GPIOA_CRH&=0xFF0FFFFF;
 80001aa:	4b19      	ldr	r3, [pc, #100]	; (8000210 <main+0xa0>)
 80001ac:	681b      	ldr	r3, [r3, #0]
 80001ae:	4a18      	ldr	r2, [pc, #96]	; (8000210 <main+0xa0>)
 80001b0:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80001b4:	6013      	str	r3, [r2, #0]
		GPIOA_CRH|=0x00200000;
 80001b6:	4b16      	ldr	r3, [pc, #88]	; (8000210 <main+0xa0>)
 80001b8:	681b      	ldr	r3, [r3, #0]
 80001ba:	4a15      	ldr	r2, [pc, #84]	; (8000210 <main+0xa0>)
 80001bc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80001c0:	6013      	str	r3, [r2, #0]

		while(1)
		{
			/*Toggle led*/
			GPIOA_ODR|=1<<13;
 80001c2:	4b14      	ldr	r3, [pc, #80]	; (8000214 <main+0xa4>)
 80001c4:	681b      	ldr	r3, [r3, #0]
 80001c6:	4a13      	ldr	r2, [pc, #76]	; (8000214 <main+0xa4>)
 80001c8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80001cc:	6013      	str	r3, [r2, #0]
			for(int i =0; i<5000;i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <main+0x6a>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f241 3287 	movw	r2, #4999	; 0x1387
 80001e0:	4293      	cmp	r3, r2
 80001e2:	ddf7      	ble.n	80001d4 <main+0x64>
			GPIOA_ODR&= ~(1<<13);
 80001e4:	4b0b      	ldr	r3, [pc, #44]	; (8000214 <main+0xa4>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a0a      	ldr	r2, [pc, #40]	; (8000214 <main+0xa4>)
 80001ea:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80001ee:	6013      	str	r3, [r2, #0]
			for(int i =0; i<5000;i++);
 80001f0:	2300      	movs	r3, #0
 80001f2:	603b      	str	r3, [r7, #0]
 80001f4:	e002      	b.n	80001fc <main+0x8c>
 80001f6:	683b      	ldr	r3, [r7, #0]
 80001f8:	3301      	adds	r3, #1
 80001fa:	603b      	str	r3, [r7, #0]
 80001fc:	683b      	ldr	r3, [r7, #0]
 80001fe:	f241 3287 	movw	r2, #4999	; 0x1387
 8000202:	4293      	cmp	r3, r2
 8000204:	ddf7      	ble.n	80001f6 <main+0x86>
			GPIOA_ODR|=1<<13;
 8000206:	e7dc      	b.n	80001c2 <main+0x52>
 8000208:	40021004 	.word	0x40021004
 800020c:	40021018 	.word	0x40021018
 8000210:	40010804 	.word	0x40010804
 8000214:	4001080c 	.word	0x4001080c

08000218 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000218:	480d      	ldr	r0, [pc, #52]	; (8000250 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800021a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800021c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000220:	480c      	ldr	r0, [pc, #48]	; (8000254 <LoopForever+0x6>)
  ldr r1, =_edata
 8000222:	490d      	ldr	r1, [pc, #52]	; (8000258 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000224:	4a0d      	ldr	r2, [pc, #52]	; (800025c <LoopForever+0xe>)
  movs r3, #0
 8000226:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000228:	e002      	b.n	8000230 <LoopCopyDataInit>

0800022a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800022a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800022c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800022e:	3304      	adds	r3, #4

08000230 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000230:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000232:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000234:	d3f9      	bcc.n	800022a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000236:	4a0a      	ldr	r2, [pc, #40]	; (8000260 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000238:	4c0a      	ldr	r4, [pc, #40]	; (8000264 <LoopForever+0x16>)
  movs r3, #0
 800023a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800023c:	e001      	b.n	8000242 <LoopFillZerobss>

0800023e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800023e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000240:	3204      	adds	r2, #4

08000242 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000242:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000244:	d3fb      	bcc.n	800023e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000246:	f000 f811 	bl	800026c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800024a:	f7ff ff91 	bl	8000170 <main>

0800024e <LoopForever>:

LoopForever:
    b LoopForever
 800024e:	e7fe      	b.n	800024e <LoopForever>
  ldr   r0, =_estack
 8000250:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000254:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000258:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800025c:	080002d4 	.word	0x080002d4
  ldr r2, =_sbss
 8000260:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000264:	2000001c 	.word	0x2000001c

08000268 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000268:	e7fe      	b.n	8000268 <ADC1_2_IRQHandler>
	...

0800026c <__libc_init_array>:
 800026c:	b570      	push	{r4, r5, r6, lr}
 800026e:	2500      	movs	r5, #0
 8000270:	4e0c      	ldr	r6, [pc, #48]	; (80002a4 <__libc_init_array+0x38>)
 8000272:	4c0d      	ldr	r4, [pc, #52]	; (80002a8 <__libc_init_array+0x3c>)
 8000274:	1ba4      	subs	r4, r4, r6
 8000276:	10a4      	asrs	r4, r4, #2
 8000278:	42a5      	cmp	r5, r4
 800027a:	d109      	bne.n	8000290 <__libc_init_array+0x24>
 800027c:	f000 f81a 	bl	80002b4 <_init>
 8000280:	2500      	movs	r5, #0
 8000282:	4e0a      	ldr	r6, [pc, #40]	; (80002ac <__libc_init_array+0x40>)
 8000284:	4c0a      	ldr	r4, [pc, #40]	; (80002b0 <__libc_init_array+0x44>)
 8000286:	1ba4      	subs	r4, r4, r6
 8000288:	10a4      	asrs	r4, r4, #2
 800028a:	42a5      	cmp	r5, r4
 800028c:	d105      	bne.n	800029a <__libc_init_array+0x2e>
 800028e:	bd70      	pop	{r4, r5, r6, pc}
 8000290:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000294:	4798      	blx	r3
 8000296:	3501      	adds	r5, #1
 8000298:	e7ee      	b.n	8000278 <__libc_init_array+0xc>
 800029a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800029e:	4798      	blx	r3
 80002a0:	3501      	adds	r5, #1
 80002a2:	e7f2      	b.n	800028a <__libc_init_array+0x1e>
 80002a4:	080002cc 	.word	0x080002cc
 80002a8:	080002cc 	.word	0x080002cc
 80002ac:	080002cc 	.word	0x080002cc
 80002b0:	080002d0 	.word	0x080002d0

080002b4 <_init>:
 80002b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002b6:	bf00      	nop
 80002b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ba:	bc08      	pop	{r3}
 80002bc:	469e      	mov	lr, r3
 80002be:	4770      	bx	lr

080002c0 <_fini>:
 80002c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002c2:	bf00      	nop
 80002c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002c6:	bc08      	pop	{r3}
 80002c8:	469e      	mov	lr, r3
 80002ca:	4770      	bx	lr
