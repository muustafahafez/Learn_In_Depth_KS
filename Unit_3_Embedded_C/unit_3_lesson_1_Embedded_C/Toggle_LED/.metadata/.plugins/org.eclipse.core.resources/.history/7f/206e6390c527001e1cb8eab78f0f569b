/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


#include "stdio.h"
#include "stdint.h"


#define RCC_Base		 0x40021000
#define RCC_APB2ENR		 *(volatile uint32_t *) (RCC_Base + 0x18)

#define IOPAEN		     2  /*Make 1 to enable clock*/


#define GPIOA_Base		 0x40010800
#define GPIOAC_CRH		 *(volatile uint32_t*) (GPIOA_Base + 0x04))
#define GPIOA_ODR		 *(volatile uint32_t*) (GPIOA_Base + 0x0c))




typedef union{
	 volatile uint32_t All_Reg;
	struct {
		 volatile	uint32_t PA:8;
		 volatile   uint32_t PB:8;
		 volatile   uint32_t PC:8;
		 volatile   uint32_t PD:8;

	}Port;


}Reg_t;

Reg_t* registerr;

int main(void)
{

RCC_APB2ENR |= (1<<IOPAEN);
	for(;;);
}
